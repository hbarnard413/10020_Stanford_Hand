
/**
 *
 * \file aei_server.h
 *
 *	aei Sensor Server
 *
 * Copyright (c) 2014, Synapticon GmbH & XMOS Ltd
 * All rights reserved.
 * Authors: Pavan Kanajar <pkanajar@synapticon.com> & Martin Schwarz <mschwarz@synapticon.com>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Execution of this software or parts of it exclusively takes place on hardware
 *    produced by Synapticon GmbH.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies,
 * either expressed or implied, of the Synapticon GmbH.
 *
 */

#ifndef __AEI_SERVER_H__
#define __AEI_SERVER_H__
#include <xs1.h>
#include <bldc_motor_config.h>
#include "aei_config.h"
#include "internal_config.h"
#include <refclk.h>
#include "filter_blocks.h"
#include <spi_master.h>

/**
 * \brief Implementation of the aei server thread (for sensor with index/no index)
 *
 *	Output channel
 * \channel c_aei_p1 the control channel for reading aei position in order of priority (highest) 1 ... (lowest) 5
 * \channel c_aei_p2 the control channel for reading aei position priority - 2
 * \channel c_aei_p3 the control channel for reading aei position priority - 3
 * \channel c_aei_p4 the control channel for reading aei position priority - 4
 * \channel c_aei_p5 the control channel for reading aei position priority - 5
 *
 *	Input port
 * \port p_aei the hardware port where the quadrature encoder is located
 *
 *	Input
 * \param aei_params the struct defines sensor type and resolution parameters for aei
 *
 */

void run_aei(chanend c_aei_p1, chanend c_aei_p2, chanend c_aei_p3, chanend c_aei_p4, chanend c_aei_p5, chanend c_hall_p1, aei_par &aei_params, spi_master_interface &spi_if, out port spi_ss);

//calibrate aei --called by aei_server at initialization to provide rough first calibration constant to align encoder with motor position as
//provided by hall sensors
//called again in hall server upon 1st hall update


#endif /*__AEI_SERVER_H__ */
